{"version":3,"sources":["services/ProductService.js","contexts/ProductContext.jsx","components/ProductForm.jsx","components/ProductList.jsx","App.js","serviceWorker.js","index.js"],"names":["ProductService","baseUrl","producto","axios","post","this","then","res","data","get","put","_id","id","ProductContext","createContext","ProductContextProvider","props","productService","useState","products","setProducts","editProduct","setEditProduct","useEffect","readAll","Provider","value","createProduct","product","create","deleteProduct","delete","filter","p","findProduct","find","updateProduct","update","map","children","ProductForm","isVisible","setIsVisible","useContext","initialProductState","name","price","expiry_date","productData","setProductData","updateField","field","console","log","dialogFooter","className","label","icon","onClick","visible","modal","style","width","contentStyle","overflow","header","onHide","footer","onChange","e","target","trim","mode","currency","Date","toISOString","substring","dateFormat","ProductList","float","textAlign","selectionMode","onSelectionChange","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.16fd8e49.chunk.js","sourcesContent":["import axios from 'axios';\r\nexport class ProductService{\r\nbaseUrl = \"https://springapimongo.herokuapp.com/api/\"\r\n\r\n//william tocto\r\n\r\ncreate(producto){\r\n    return axios.post(this.baseUrl+\"producto/\",producto).then(res => res.data);\r\n\r\n}\r\nreadAll(){\r\n    return axios.get(this.baseUrl).then(res => res.data);\r\n\r\n}\r\nupdate(producto){\r\n    return axios.put(this.baseUrl+\"producto/\"+producto._id,producto).then(res => res.data);\r\n\r\n}\r\ndelete(id){\r\n    return axios.post(this.baseUrl+\"producto/\"+id).then(res => res.data);\r\n}\r\n\r\n\r\n}","import React, { createContext, useState, useEffect } from \"react\";\r\nimport { ProductService } from \"../services/ProductService\";\r\n\r\nexport const ProductContext = createContext();\r\n\r\nconst ProductContextProvider = (props) => {\r\n  const productService = new ProductService();\r\n\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const [editProduct, setEditProduct] = useState(null);\r\n\r\n  useEffect(() => {\r\n    productService.readAll().then((data) => setProducts(data));\r\n  }, []);\r\n\r\n  const createProduct = (product) => {\r\n    productService\r\n      .create(product)\r\n      .then((data) => setProducts([...products, data]));\r\n  };\r\n\r\n  const deleteProduct = (id) => {\r\n    productService\r\n      .delete(id)\r\n      .then(() => setProducts(products.filter((p) => p._id !== id)));\r\n  };\r\n\r\n  const findProduct = (id) => {\r\n    const product = products.find((p) => p._id === id);\r\n\r\n    setEditProduct(product);\r\n  };\r\n\r\n  const updateProduct = (product) => {\r\n    productService\r\n      .update(product)\r\n      .then((data) =>\r\n        setProducts(\r\n          products.map((p) => (p._id === product._id ? data : product))\r\n        )\r\n      );\r\n\r\n    setEditProduct(null);\r\n  };\r\n\r\n  return (\r\n    <ProductContext.Provider\r\n      value={{\r\n        createProduct,\r\n        deleteProduct,\r\n        findProduct,\r\n        updateProduct,\r\n        editProduct,\r\n        products,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ProductContextProvider;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { ProductContext } from \"../contexts/ProductContext\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport { Button } from \"primereact/button\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { InputNumber } from \"primereact/inputnumber\";\r\nimport { Calendar } from \"primereact/calendar\";\r\n\r\nconst ProductForm = (props) => {\r\n  const { isVisible, setIsVisible } = props;\r\n\r\n  const {\r\n    createProduct,\r\n    deleteProduct,\r\n    editProduct,\r\n    updateProduct,\r\n  } = useContext(ProductContext);\r\n\r\n  const initialProductState = {\r\n    _id: null,\r\n    name: \"\",\r\n    price: 0,\r\n    expiry_date: null,\r\n  };\r\n\r\n  const [productData, setProductData] = useState(initialProductState);\r\n\r\n  useEffect(() => {\r\n    if (editProduct) setProductData(editProduct);\r\n  }, [editProduct]);\r\n\r\n  const updateField = (data, field) => {\r\n    setProductData({\r\n      ...productData,\r\n      [field]: data,\r\n    });\r\n\r\n    console.log(productData);\r\n  };\r\n\r\n  const _deleteProduct = () => {\r\n    if (editProduct) {\r\n      deleteProduct(productData._id);\r\n      setProductData(initialProductState);\r\n    }\r\n    setIsVisible(false);\r\n  };\r\n\r\n  const saveProduct = () => {\r\n    if (!editProduct) {\r\n      createProduct(productData);\r\n    } else {\r\n      updateProduct(productData);\r\n    }\r\n    setProductData(initialProductState);\r\n    setIsVisible(false);\r\n  };\r\n\r\n  const dialogFooter = (\r\n    <div className=\"ui-dialog-buttonpane p-clearfix\">\r\n      <Button label=\"Delete\" icon=\"pi pi-times\" onClick={_deleteProduct} />\r\n      <Button label=\"Save\" icon=\"pi pi-check\" onClick={saveProduct} />\r\n    </div>\r\n  );\r\n\r\n  const clearSelected = () => {\r\n    setIsVisible(false);\r\n    setProductData(initialProductState);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        visible={isVisible}\r\n        modal={true}\r\n        style={{ width: \"420px\" }}\r\n        contentStyle={{ overflow: \"visible\" }}\r\n        header=\"Detalles del Producto\"\r\n        onHide={() => clearSelected()}\r\n        footer={dialogFooter}\r\n      >\r\n        <div className=\"p-grid p-fluid\">\r\n          <br />\r\n          <div className=\"p-float-label\">\r\n            <InputText\r\n              value={productData.name}\r\n              onChange={(e) => updateField(e.target.value.trim(), \"name\")}\r\n            />\r\n            <label>Nombre:</label>\r\n          </div>\r\n          <br />\r\n          <div className=\"p-float-label\">\r\n            <InputNumber\r\n              value={productData.price}\r\n              onChange={(e) => updateField(e.target.value, \"price\")}\r\n              mode=\"currency\"\r\n              currency=\"USD\"\r\n            />\r\n            <label>Precio:</label>\r\n          </div>\r\n          <br />\r\n          <div className=\"p-float-label\">\r\n            <Calendar\r\n              value={\r\n                productData.expiry_date &&\r\n                new Date(productData.expiry_date + \" \")\r\n              }\r\n              onChange={(e) =>\r\n                updateField(\r\n                  e.target.value.toISOString().substring(0, 10),\r\n                  \"expiry_date\"\r\n                )\r\n              }\r\n              dateFormat=\"yy-mm-dd\"\r\n            />\r\n            <label>Fecha de caducidad:</label>\r\n          </div>\r\n          <br />\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Panel } from \"primereact/panel\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { Button } from \"primereact/button\";\r\nimport { ProductContext } from \"../contexts/ProductContext\";\r\nimport ProductForm from \"./ProductForm\";\r\n\r\nconst ProductList = () => {\r\n  const { products, findProduct } = useContext(ProductContext);\r\n\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const saveProduct = (id) => {\r\n    findProduct(id);\r\n    setIsVisible(true);\r\n  };\r\n\r\n  const footer = (\r\n    <div className=\"p-clearfix\" style={{ width: \"100%\" }}>\r\n      <Button\r\n        style={{ float: \"left\" }}\r\n        icon=\"pi pi-plus\"\r\n        label=\"Add\"\r\n        onClick={() => setIsVisible(true)}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Panel header=\"LISTA DE PRODUCTOS\" style={{ textAlign: \"center\" }}>\r\n        <DataTable\r\n          value={products}\r\n          selectionMode=\"single\"\r\n          onSelectionChange={(e) => saveProduct(e.value._id)}\r\n          footer={footer}\r\n        >\r\n          <Column field=\"_id\" header=\"Id\" />\r\n          <Column field=\"id\" header=\"Ids\" />\r\n          <Column field=\"name\" header=\"Nombre\" />\r\n          <Column field=\"precio\" header=\"Precio\" />\r\n          <Column field=\"cantidad\" header=\"Cantidad\" />\r\n          <Column field=\"descripcion\" header=\"Descripcion\" />\r\n        </DataTable>\r\n      </Panel>\r\n      <ProductForm isVisible={isVisible} setIsVisible={setIsVisible} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React from 'react';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport ProductContextProvider from './contexts/ProductContext';\r\nimport ProductList from './components/ProductList';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <ProductContextProvider>\r\n            <ProductList/>\r\n        </ProductContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}